defaultTasks 'clean', 'test', 'aggregate'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'net.serenity-bdd.aggregator'
sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'co.com.tuya.certificacion'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    ext{
        serenityVersion = "2.2.6"
        serenityGradleVersion = "2.2.6"
        serenityCucumberVersion = "2.2.6"
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$rootProject.ext.serenityGradleVersion")
    }
}

configurations.all {
    resolutionStrategy {
        force "io.cucumber:cucumber-core:5.0.0"
    }
}

dependencies {
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'

    implementation  group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha1'
    implementation  group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20230618'


    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion",
            "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion",
            "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion",
            "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion",
            "net.serenity-bdd:serenity-screenplay-rest:$rootProject.ext.serenityVersion"

    implementation group: 'net.sf.jt400', name: 'jt400', version: '8.5'
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.3'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'



    testImplementation "net.serenity-bdd:serenity-cucumber5:$rootProject.ext.serenityCucumberVersion",
            "junit:junit:4.12",
            "org.assertj:assertj-core:3.8.0"
}

test {
    systemProperties System.getProperties()
    systemProperty "file.encoding", "UTF-8"
    systemProperty "feature.file.encoding", "UTF-8"
    systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
    System.properties.setProperty('http.proxyHost', '10.169.104.166')
    System.properties.setProperty('http.proxyPort', '8080')
    testLogging.showStandardStreams = true
    finalizedBy(aggregate)
}

tasks.withType(JavaCompile) {
    options.encoding('UTF-8')
}